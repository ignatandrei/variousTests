using Microsoft.VisualStudio.TestTools.UnitTesting;
using Mysqlx.Crud;
using SqlTableSeparator;
using System.Collections.Generic;
using System.IO;

namespace TestVarious;

public static class WordPressPostParser
{

    [TestClass]
    public sealed class TestWordPressTableSeparator
    {
        [DataTestMethod]
        //this is just as a reference of order of the columns in insert, not used in the test
        //[DataRow(
        //    "INSERT INTO `wp_posts`(`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_category`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24)",
        //    1, 7
        //)]
        [DataRow(
            "INSERT INTO `wp_posts` VALUES (3,1,'2009-11-14 01:45:23','2009-11-13 22:45:23','<img class=\"alignnone size-full wp-image-4\" title=\"learningjquery\" src=\"http://msprogrammer.serviciipeweb.ro/wp-content/uploads/2009/11/new-bitmap-image.bmp\" alt=\"learning jquery\" />\r\n\r\nTaking into account that Microsoft Visual Studio 2010 integrates jQuery, you might want to read about it. Of course, the first link is just http://jquery.com/.\r\n\r\nThen recommend \"Learning jQuery - Better Interaction Design and Web Development with Simple JavaScript Techniques\"\r\n\r\nA quick to learn from it about jQuery, about $ (document). Ready, Ajax with jQuery and about (developing) plug-ins. My only problem is that plug-ins mentioned are just few ...\r\n\r\nWorth reading!\r\n\r\n<a href=\"http://www.amazon.com/gp/product/1847192505?ie=UTF8&amp;tag=httpwwwservic-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1847192505\">Learning jQuery: Better Interaction Design and Web Development with Simple JavaScript Techniques</a><img style=\"border:none !important; margin:0px !important;\" src=\"http://www.assoc-amazon.com/e/ir?t=httpwwwservic-20&amp;l=as2&amp;o=1&amp;a=1847192505\" border=\"0\" alt=\"\" width=\"1\" height=\"1\" />','jQuery Learning',0,'','publish','open','open','','jquery-learning','','','2009-11-14 02:08:43','2009-11-13 23:08:43','',0,'http://msprogrammer.serviciipeweb.ro/msprogrammer/?p=3',0,'post','',3);",
            3, 0
        )]
        [DataRow(
        "INSERT INTO `wp_posts` VALUES(49, 1, '2010-03-01 02:10:50', '2010-02-28 23:10:50', '<strong>Saving and retrieving application settings</strong><strong> </strong>\r\n\r\nEvery application that I have made needs at minimum two things, that we will put on the generic term “ settings “:\r\n\r\n1. “remember” their state – information that are read at the beginning, write at the end of the program . We will name those “local settings” because there are different by each user that uses the application.\r\n\r\n2. Connect with other applications (databases, web services, other programs ) and remember the “connection” settings – information that is read and does not change often ( number of writes is minimized). We will name this “global settings”.Most of the time the writing is realized by setup and/or a new application dedicated to application administration.\r\n\r\nUsually the settings are saved in a file persisted on local hard disk. From the programmer perspective, there are four questions that arise:\r\n\r\n1. when to save\r\n\r\n2. where to save\r\n\r\n3. how to save\r\n\r\n4. how to make the information confidential.\r\n<h4>When to save</h4>\r\nThe saving can be done in two separate moments: on installing the application and in running the application. Usually, the global settings(information that does not change often such as  database connection) is persisted on application setup and read when the application starts. The local settings information (such as last action of the user) is read when the application starts and it is write at the application end.\r\n<h4>Where to save</h4>\r\nFor a desktop application there are two places to save the data  for a application : the folder where the applications is installed by the user (usually %programfiles% , can be obtained  in .NET with Path.GetDirectoryName( Assembly.GetEntryAssembly().GetName().CodeBase)) and the local folder for application data for this user (%USERPROFILE%\\AppData\\Local – obtained in .NET with\r\nEnvironment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData)\r\n). The first one is for global settings, the other one for local user settings.\r\n<h4>How to save</h4>\r\nWe will enumerate here several methods, remaining for you the task to choose between the best. We will deliberately skip the method in which you use a file and you wrote information there in a proprietary format.\r\nIn the next examples we will save/retrieve two named properties : DatabaseConnection and LastAction\r\n<strong>Save method 1  : from Settings within Visual Studio</strong>\r\nYou can create settings for your project very easy. Load your project in Visual Studio, click on toolbar Project=&gt;Properties, select the tab “Settings” and create the settings. In the picture you will see two settings, one with user scope and one with application scope:\r\n<a href=\"http://msprogrammer.serviciipeweb.ro/wp-content/uploads/SavingSettingforWindowsForms_F16/clip_image002.jpg\"><img style=\"display: inline; border-width: 0px;\" title=\"clip_image002\" src=\"http://msprogrammer.serviciipeweb.ro/wp-content/uploads/SavingSettingforWindowsForms_F16/clip_image002_thumb.jpg\" border=\"0\" alt=\"clip_image002\" width=\"244\" height=\"165\" /></a>\r\nBy default Visual Studio creates a class named “Settings” and puts code for retrieving/storing the settings that you create. More – the application settings does not have a “set” by default – it is normal since it is stored in application config file – an ordinary user cannot write this setting.\r\nThe code for retrieving/saving the settings is the following:\r\nConsole.WriteLine(Properties.Settings.Default.DatabaseConnection);\r\nConsole.WriteLine(Properties.Settings.Default.LastAction);\r\nProperties.Settings.Default.LastAction = \"difference\";\r\nProperties.Settings.Default.Save();\r\n//you can reset the values by\r\n//Properties.Settings.Default.Reset();\r\nFor more details please refer to the following links :\r\n\r\n· Application Settings Architecture , <a href=\"http://msdn.microsoft.com/en-us/library/8eyb2ct1.aspx\">http://msdn.microsoft.com/en-us/library/8eyb2ct1.aspx</a><a name=\"zw-127\"></a>\r\n\r\n· Application Settings Overview , <a href=\"http://msdn.microsoft.com/en-us/library/k4s6c3a0.aspx\">http://msdn.microsoft.com/en-us/library/k4s6c3a0.aspx</a><a name=\"zw-132\"></a>\r\n\r\nVideo tutorial : <a href=\"http://www.youtube.com/watch?v=-JDoZU0HBBo&amp;feature=PlayList&amp;p=70009BDDADB00AEF&amp;index=1\">http://www.youtube.com/watch?v=-JDoZU0HBBo&amp;feature=PlayList&amp;p=70009BDDADB00AEF&amp;index=1</a>\r\n\r\n<strong>Save method 2 : from  application configuration file\r\n</strong>\r\nYou can read/save directly from application configuration file. Add an application configuration file to the project and a reference to System.Configuration . In the app.config file add\r\n&lt;appSettings&gt;\r\n&lt;add key=\"DatabaseConnection\" value=\"name=Stargate\"/&gt;\r\n&lt;add key=\"LastAction\" value=\"add\"/&gt;\r\n&lt;/appSettings&gt;\r\nAnd the code is the following:\r\nvar app=ConfigurationManager.AppSettings;\r\nforeach (var key in app.AllKeys)\r\n{\r\nConsole.WriteLine(string.Format(\"{0}={1}\",key,app[key]));\r\n}\r\nObservation 1 :  Please ensure you put in the app.config file file just global settings. Otherwise the application must have administrative rights to modify the app.config file.\r\nObservation 2 : For asp.net applications , the modifying of Web.config will result in restarting the application - that is NOT a good behaviour.\r\n\r\nVideo Tutorial : <a href=\"http://www.youtube.com/watch?v=Axkt_KE0JX4&amp;feature=PlayList&amp;p=70009BDDADB00AEF&amp;index=2\">http://www.youtube.com/watch?v=Axkt_KE0JX4&amp;feature=PlayList&amp;p=70009BDDADB00AEF&amp;index=2</a>\r\n\r\n<strong>\r\nSave method 3 , create a new configuration :</strong>\r\nThis method is a combinations between method 2 and 3 : we have an intermediate class to save and we save in the config file . It is somewhat more to write about, but it is more safe - and can be modified and/or tested easily.\r\nFirst we create the class :\r\npublic class MyConfig : ConfigurationSection\r\n{\r\n[ConfigurationProperty(\"DatabaseConnection\")]\r\npublic string DatabaseConnection\r\n{\r\nget\r\n{\r\nreturn base[\"DatabaseConnection\"].ToString();\r\n}\r\nset\r\n{\r\nbase[\"DatabaseConnection\"] = value;\r\n}\r\n}\r\n[ConfigurationProperty(\"LastAction\")]\r\npublic string LastAction\r\n{\r\nget\r\n{\r\nreturn base[\"LastAction\"].ToString();\r\n}\r\nset\r\n{\r\nbase[\"LastAction\"] = value;\r\n}\r\n}\r\n}\r\nNext , we put in the application configuration file the settings :\r\n&lt;configSections&gt;\r\n&lt;sectionGroup name=\"MyApplicationSettings\"&gt;\r\n&lt;section name=\"MyConfig\" type=\"AppSettingsConsole.MyConfig, AppSettingsConsole\"  restartOnExternalChanges=\"false\" allowDefinition=\"Everywhere\" /&gt;\r\n&lt;/sectionGroup&gt;\r\n&lt;/configSections&gt;\r\n&lt;MyApplicationSettings&gt;\r\n&lt;MyConfig DatabaseConnection=\"name=Stargate\" LastAction=\"add\"&gt;\r\n&lt;/MyConfig&gt;\r\n&lt;/MyApplicationSettings&gt;\r\nAnd third we wrote code to retrieve :\r\nMyConfig m = (MyConfig)System.Configuration.ConfigurationManager.GetSection(\"MyApplicationSettings/MyConfig\");\r\nConsole.WriteLine(m.DatabaseConnection);\r\nConsole.WriteLine(m.LastAction);\r\n\r\nVideo Tutorial : <a href=\"http://www.youtube.com/watch?v=oglDeV7sc94&amp;feature=PlayList&amp;p=70009BDDADB00AEF&amp;index=3\">http://www.youtube.com/watch?v=oglDeV7sc94&amp;feature=PlayList&amp;p=70009BDDADB00AEF&amp;index=3</a>\r\n\r\n<strong>Save method 4, XML file :\r\n</strong>This is the method with the more liberty. We can define any class we want to preserve properties - we just need to serialize the class.\r\npublic class MySettings\r\n{\r\nstatic XmlSerializer xs;\r\nstatic MySettings()\r\n{\r\nxs = new XmlSerializer(typeof(MySettings));\r\n}\r\npublic string DatabaseConnection { get; set; }\r\npublic string LastAction { get; set; }\r\npublic void SaveToFile(string NameFile)\r\n{\r\nusing (StreamWriter sw = new StreamWriter(NameFile))\r\n{\r\nxs.Serialize(sw, this);\r\n}\r\n}\r\npublic static MySettings RetrieveFromFile(string NameFile)\r\n{\r\nusing (StreamReader sw = new StreamReader(NameFile))\r\n{\r\nreturn xs.Deserialize(sw) as MySettings;\r\n}\r\n}\r\n}\r\nAnd the code to save is easier :\r\nstring folderPath = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);\r\nstring FileName = Path.Combine(folderPath, \"mysettings.txt\");\r\nMySettings ms = new MySettings();\r\nms.DatabaseConnection = \"name=Stargate\";\r\nms.LastAction = \"add\";\r\nms.SaveToFile(FileName);\r\nMySettings msRetrieve = MySettings.RetrieveFromFile(FileName);\r\nConsole.WriteLine(ms.LastAction + \" -- \" + ms.DatabaseConnection);\r\nVideo Tutorial : <a href=\"http://www.youtube.com/watch?v=MtK3zZYjfS0&amp;feature=PlayList&amp;p=70009BDDADB00AEF&amp;index=0\">http://www.youtube.com/watch?v=MtK3zZYjfS0&amp;feature=PlayList&amp;p=70009BDDADB00AEF&amp;index=0</a>\r\n<strong>Save method 5, Ini Files\r\n</strong>\r\n<a href=\"http://jachman.wordpress.com/2006/09/11/how-to-access-ini-files-in-c-net/\">http://jachman.wordpress.com/2006/09/11/how-to-access-ini-files-in-c-net/</a><a name=\"zw-250\"></a>\r\n<a href=\"http://www.codeproject.com/KB/cross-platform/INIFile.aspx\">http://www.codeproject.com/KB/cross-platform/INIFile.aspx</a><a name=\"zw-252\"></a>\r\nSave method 6, Database\r\nIt\'s obvious that you can have a table with 3 columns :Object, Name and Value. Access this column with EF, L2S , NHibernate or any other framework\r\n<strong>Save method </strong><strong>7, Registry\r\n</strong>\r\nJust the code\r\nusing (RegistryKey r = Registry.CurrentUser.CreateSubKey(@\"Software\\App\"))\r\n{\r\n{\r\nr.SetValue(\"myvalue\", \"1\", RegistryValueKind.String);\r\n}\r\n}\r\nusing (RegistryKey r = Registry.CurrentUser.CreateSubKey(@\"Software\\App\"))\r\n{\r\nConsole.WriteLine(r.GetValue(\"myvalue\"));\r\n}\r\nVideo Tutorial : <a href=\"http://www.youtube.com/watch?v=UeBPTbWgthM&amp;feature=PlayList&amp;p=70009BDDADB00AEF&amp;index=4\">http://www.youtube.com/watch?v=UeBPTbWgthM&amp;feature=PlayList&amp;p=70009BDDADB00AEF&amp;index=4</a>\r\n<h3>Summary</h3>\r\nIn this chapter we have shown different ways to store application settings in various file formats. A final recommendation is to store application global data in config file (either web.config, either app.config) and local user in XML file ( in\r\nEnvironment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData)\r\nfolder). More, for each desktop application please provide a way to edit the config file – and make sure you request elevated privileges.', 'Saving Setting for Windows Forms', 0, '', 'publish', 'open', 'open', '', 'saving-setting-for-windows-forms', '', 'http://jachman.wordpress.com/2006/09/11/how-to-access-ini-files-in-c-net/\nhttp://jachman.wordpress.com/2006/09/11/how-to-access-ini-files-in-c-net/', '2010-03-01 02:19:30', '2010-02-28 23:19:30', '', 0, 'http://msprogrammer.serviciipeweb.ro/2010/03/01/saving-setting-for-windows-forms/', 0, 'post', '', 1);",
            49, 0
           )]
        [DataRow("INSERT INTO `wp_posts` VALUES (3,1,'2009-11-14 01:45:23','2009-11-13 22:45:23','<img class=\"alignnone size-full wp-image-4\" title=\"learningjquery\" src=\"http://msprogrammer.serviciipeweb.ro/wp-content/uploads/2009/11/new-bitmap-image.bmp\" alt=\"learning jquery\" />\r\n\r\nTaking into account that Microsoft Visual Studio 2010 integrates jQuery, you might want to read about it. Of course, the first link is just http://jquery.com/.\r\n\r\nThen recommend \"Learning jQuery - Better Interaction Design and Web Development with Simple JavaScript Techniques\"\r\n\r\nA quick to learn from it about jQuery, about $ (document). Ready, Ajax with jQuery and about (developing) plug-ins. My only problem is that plug-ins mentioned are just few ...\r\n\r\nWorth reading!\r\n\r\n<a href=\"http://www.amazon.com/gp/product/1847192505?ie=UTF8&amp;tag=httpwwwservic-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1847192505\">Learning jQuery: Better Interaction Design and Web Development with Simple JavaScript Techniques</a><img style=\"border:none !important; margin:0px !important;\" src=\"http://www.assoc-amazon.com/e/ir?t=httpwwwservic-20&amp;l=as2&amp;o=1&amp;a=1847192505\" border=\"0\" alt=\"\" width=\"1\" height=\"1\" />','jQuery Learning',0,'','publish','open','open','','jquery-learning','','','2009-11-14 02:08:43','2009-11-13 23:08:43','',0,'http://msprogrammer.serviciipeweb.ro/msprogrammer/?p=3',0,'post','',3)",
            3, 0)]
        public void Test_WpPostsInsert_TransformAndExtractCategory(string input, int expectedId, int expectedCategory)
        {
            // Arrange
            var info = new PostCategoryInfo();
            // Act
            var output = info.ParseInsertStatement(input);



            // Assert
            Assert.AreEqual(expectedId, output.ID);
            Assert.AreEqual(expectedCategory, output.PostCategory);

        }

    }
}
